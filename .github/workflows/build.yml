name: 'Build'

on:
  push:
    branches: [ master, main, dev ]
  pull_request:
    branches: [ master, main, dev ]
  schedule:
    # run every saturday at 4:41 AM
    - cron: '41 4 * * SAT'
  workflow_dispatch:
jobs:
  # 32- and 64-bit linux builds
  build-linux:
    runs-on: ubuntu-latest
    #env: 
    steps:
    - uses: actions/checkout@v2

    - name: "build x86"
      run: bash docker/build.sh ubuntu x86

    - name: "build x64"
      run: bash docker/build.sh ubuntu x86_64

    # release bundle
    - uses: actions/upload-artifact@v3
      with:
        name: opengml-ubuntu-x86
        path: artifacts-ubuntu-x86/

    - uses: actions/upload-artifact@v3
      with:
        name: opengml-ubuntu-x86_64
        path: artifacts-ubuntu-x86_64/
    
    # appimages
    - uses: actions/upload-artifact@v3
      with:
        name: ogm-ubuntu-x86.AppImage
        path: ogm-ubuntu-x86.AppImage

    - uses: actions/upload-artifact@v3
      with:
        name: ogm-ubuntu-x86_64.AppImage
        path: ogm-ubuntu-x64.AppImage
  
  # 32-bit windows build
  build-win32:
    runs-on: windows-latest
    env:
        OL: '.\\libs'
    steps:

    # pull
    - uses: actions/checkout@v2

    # for debugging
    - run: python3 etc/meta/print-env.py

    # download dependencies
    - name: get-scons
      run: python3 -m pip install scons
    - name: get-vcpkg
      run: git clone --single-branch --depth 1 -b 2019.10 --recurse https://github.com/Microsoft/vcpkg
    - uses: lukka/run-vcpkg@v7
      with:
        vcpkgArguments: "sdl2 sdl2-image sdl2-mixer sdl2-ttf glew glm curl freeglut boost-program-options boost-filesystem assimp"
        vcpkgTriplet: "x86-windows"
        vcpkgGitCommitId: "6282cab61d175974b1af06473db584b9b80dcd48"
        vcpkgDirectory: '${{ runner.workspace }}/vcpkg'
    - run: vcpkg integrate install

    # build
    - run: scons build-dir="out" release=1 -j 8 architecture=x86 --debug=findlibs
      env:
        MSVC_USE_SCRIPT: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\Build\\vcvars32.bat"
        SCONS_MSCOMMON_DEBUG: '-'
    
    # debug if build failed.
    - run: cat config.log
      if: ${{ failure() }}
        
    # get the necessary DLLs for distribution
    - run: cd ${{ env.BINPATH }} && dir
      env:
        BINPATH: '${{ runner.workspace }}\\vcpkg\\installed\\x86-windows\\bin'
    - run: mkdir ${{ env.OL }}
    - run: cp ${{ env.BINPATH }}\\SDL2.dll ${{ env.OL }} && cp ${{ env.BINPATH }}\\SDL2_ttf.dll ${{ env.OL }} && cp ${{ env.BINPATH }}\\glew32.dll ${{ env.OL }} &&
           cp ${{ env.BINPATH }}\\libcurl.dll ${{ env.OL }} && cp ${{ env.BINPATH }}\\assimp*.dll ${{ env.OL }} && cp ${{ env.BINPATH }}\\zlib1.dll ${{ env.OL }} &&
           cp ${{ env.BINPATH }}\\freetype.dll ${{ env.OL }} && cp ${{ env.BINPATH }}\\bz2.dll ${{ env.OL }} && cp ${{ env.BINPATH }}\\boost-program-option*.dll ${{ env.OL }} &&
           cp ${{ env.BINPATH }}\\libpng*.dll ${{ env.OL }} && cp ${{ env.BINPATH }}\\jpeg*.dll ${{ env.OL }} && cp ${{ env.BINPATH }}\\brotli*.dll ${{ env.OL }}
      env:
        BINPATH: '${{ runner.workspace }}\\vcpkg\\installed\\x86-windows\\bin'
    - run: cd ${{ env.OL }} && dir
    
    # assemble release
    - run: python3 etc/meta/assemble-release.py . opengml-release out
    
    # release
    - uses: actions/upload-artifact@v3
      with:
        name: opengml-win-x86
        path: opengml-release/

  # 64-bit osx
  build-osx:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - run: brew install scons sdl2 sdl2_image sdl2_mixer sdl2_ttf glew glm curl
    - run: scons build-dir="out" -j 8 architecture=x64 --debug=findlibs
    
    # debug if build failed.
    - run: cat config.log
      if: ${{ failure() }}
      
    - run: python3 etc/meta/assemble-release.py . opengml-release out

    # run tests
    - run: chmod a+x opengml-release/ogm-test
    - run: chmod a+x opengml-release/ogm
    - run: opengml-release/ogm-test

    - uses: actions/upload-artifact@v3
      with:
        name: opengml-osx-x86_64
        path: opengml-release/
